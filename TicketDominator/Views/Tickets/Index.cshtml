@model X.PagedList.IPagedList<TicketDominator.Models.Ticket>

@using X.PagedList;
@using X.PagedList.Mvc;
@using System.Collections;

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<table class="table">
    @if (Model != null) {
        var first = Model.FirstOrDefault();
        <tr>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(modelItem => first.Artist).ToString(), "Index", new { sortExp = "artist", sortOrder = (ViewBag.SortExpression == "artist" ? (ViewBag.SortOrder == "desc" ? "asc" : "desc"): "asc") })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(modelItem => first.Venue).ToString(), "Index", new { sortExp = "venue", sortOrder = (ViewBag.SortExpression == "venue" ? (ViewBag.SortOrder == "desc" ? "asc" : "desc") : "asc") })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(modelItem => first.Date).ToString(), "Index", new { sortExp = "date", sortOrder = (ViewBag.SortExpression == "date" ? (ViewBag.SortOrder == "desc" ? "asc" : "desc") : "asc") })
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => first.Price)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => first.Amount)
            </th>

            <th></th>
            <th></th>
        </tr>
        foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Artist)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Venue)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", new {  id = item.Id  })
                </td>
                <td>
                    @Ajax.ActionLink("Add to Cart", "AddToCart", "ShoppingCart", new { @item.Id }, new AjaxOptions
                       {
                           UpdateTargetId = "shoppingcartsummary",
                           InsertionMode = InsertionMode.Replace,
                           HttpMethod = "Get"
                       }, new { @class = "inline-block" })
                </td>

            </tr>
        }
    }
</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortExp = ViewBag.SortExpression, sortOrder = ViewBag.SortOrder }), new PagedListRenderOptions {
    UlElementClasses = new List<string> {
        "pagination",
        "justify-content-center"
    },
    LiElementClasses = new List<string> {
        "page-item"
    },
    PageClasses = new List<string> {
        "page-link"
    }
})